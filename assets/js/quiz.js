const questions = [
  // 1
  {
    question: "B·ªô phim chi·∫øu r·∫°p ch√∫ng ta ƒë√£ coi c√πng nhau ?",
    answers: [
      { text: "Bad Genius", correct: true },
      { text: "The Greatest Showman", correct: false },
      { text: "Avengers: Endgame", correct: false },
      { text: "The New King Of Comedy", correct: false }
    ]
  },
  // 2
  {
    question: "M√≥n ƒÉn ch√∫ng ta ƒÉn c√πng v·ªõi nhau nhi·ªÅu nh·∫•t ?",
    answers: [
      { text: "Chicken", correct: false },
      { text: "Noodle Spicy", correct: true },
      { text: "Pho", correct: false },
      { text: "HotPot", correct: false }
    ]
  },
  // 3
  {
    question: "M√¥n th·ªÉ thao ch√∫ng ta hay ch∆°i v·ªõi nhau ?",
    answers: [
      { text: "Basketball", correct: false },
      { text: "Football", correct: false },
      { text: "Tennis", correct: false },
      { text: "Badminton", correct: true }
    ]
  },
  // 4
  {
    question: "V·∫≠t nu√¥i m√† ch√∫ng ta (me or you) y√™u th√≠ch ?",
    answers: [
      { text: "Dog", correct: false },
      { text: "Cat", correct: true },
      { text: "Hamster", correct: false },
      { text: "Rabbit", correct: false }
    ]
  },
  // 5
  {
    question: "Ng√†y n√†o l√† ng√†y t·ªè t√¨nh ?",
    answers: [
      { text: "01.10.2019", correct: false },
      { text: "01.07.2019", correct: false },
      { text: "01.06.2019", correct: false },
      { text: "01.05.2019", correct: true }
    ]
  },
  // 6
  {
    question: "01.07.2019 - l√† ng√†y g√¨ ?",
    answers: [
      { text: "First Kiss", correct: true },
      { text: "Holding Hands For The First", correct: false },
      { text: "Watch A Movie", correct: false },
      { text: "Confess Your Love - T·ªè t√¨nh", correct: false }
    ]
  },
  // 7
  {
    question: "Ai l√† ng∆∞·ªùi n·∫•u ƒÉn ngon h∆°n ?",
    answers: [
      { text: "B√© Tr√∫c", correct: false },
      { text: "B√© Nh∆∞", correct: false },
      { text: "L√∫c n√†y, l√∫c kia", correct: true },
      { text: "N·∫•u d·ªü ƒë·ªÅu nh∆∞ nhau", correct: false }
    ]
  },
  // 8
  {
    question: "Ai l√† ng∆∞·ªùi c√≥ t√¨nh c·∫£m tr∆∞·ªõc ?",
    answers: [
      { text: "B√© Tr√∫c", correct: false },
      { text: "B√© Nh∆∞", correct: true },
      { text: "Ng∆∞·ªùi n√†y ng∆∞·ªùi kia ƒë·ªÅu c√≥", correct: false },
      { text: "Kh√¥ng m·ªôt ai h·∫øt", correct: false }
    ]
  },
  // 9
  {
    question: "Ai l√† ng∆∞·ªùi l√£ng m·∫°n h∆°n ?",
    answers: [
      { text: "B√© Tr√∫c", correct: false },
      { text: "B√© Nh∆∞", correct: false },
      { text: "L√∫c ng∆∞·ªùi n√†y, l√∫c ng∆∞·ªùi kia", correct: true },
      { text: "Kh√¥ng m·ªôt ai, ai c≈©ng l√£ng x·∫πt", correct: false }
    ]
  },
  // 10
  {
    question: "Ai l√† ng∆∞·ªùi hay n√≥ng t√≠nh nh·∫•t ?",
    answers: [
      { text: "B√© Tr√∫c", correct: false },
      { text: "B√© Nh∆∞", correct: true },
      { text: "L√∫c b√© n√†y, l√∫c b√© kia", correct: false },
      { text: "Kh√¥ng!!! ƒê·ª©a n√†o c≈©ng hi·ªÅn t·ª´, n·∫øt na, ƒëoan trang", correct: false }
    ]
  },
  // 11
  {
    question: "Ai l√† ng∆∞·ªùi s·∫Ω m·∫•t t√≠ch v√¨ ng·ªß qu√™n ?",
    answers: [
      { text: "B√© Tr√∫c", correct: false },
      { text: "B√© Nh∆∞", correct: false },
      { text: "Ch·∫Øc ch·∫Øn l√† c·∫£ hai", correct: true },
      { text: "Kh√¥ng c√≥ ƒë√°p √°n n√†o", correct: false }
    ]
  },
  // 12
  {
    question: "Ai l√† ng∆∞·ªùi hay mu·ªôn nh·∫•t ?",
    answers: [
      { text: "B√© Tr√∫c", correct: true },
      { text: "B√© Nh∆∞", correct: false },
      { text: "C·∫£ 2", correct: false },
      { text: "Kh√¥ng c√≥ ƒë√°p √°n n√†o", correct: false }
    ]
  }, 
  // 13
  {
    question: "Ai l√† ng∆∞·ªùi h√†i h∆∞·ªõc ?",
    answers: [
      { text: "B√© Tr√∫c", correct: false },
      { text: "B√© Nh∆∞", correct: false },
      { text: "L√∫c ƒë·ª©a n√†y, l√∫c ƒë·ª©a kia", correct: true },
      { text: "Kh√¥ng!!! ƒê·ª©a n√†o c≈©ng nh·∫°t nh∆∞ n∆∞·ªõc l√£", correct: false }
    ]
  },
  // 14
  {
    question: "Ai l√† ng∆∞·ªùi c√≥ gu th·ªùi trang h∆°n ?",
    answers: [
      { text: "B√© Tr√∫c", correct: false },
      { text: "B√© Nh∆∞", correct: false },
      { text: "C·∫£ 2 nha, ƒë·ª©a n√†o c≈©ng fashion", correct: false },
      { text: "Chuy·ªán bu·ªìn, v√¨ c·∫£ hai ƒë·ªÅu m·∫∑c x·∫•u", correct: true }
    ]
  },
  // 15
  {
    question: "Ch√∫ng ta ƒë√£ b√™n nhau bao l√¢u ?",
    answers: [
      { text: "6 nƒÉm", correct: true },
      { text: "5 nƒÉm", correct: false },
      { text: "4 nƒÉm", correct: false },
      { text: "3 nƒÉm", correct: false }
    ]
  }
];

// L·∫•y c√°c ph·∫ßn t·ª≠ DOM c·∫ßn thi·∫øt
const questionElements = document.getElementById("question");
const answersButtons = document.getElementById("answer-buttons");
const nextButton = document.getElementById("next-btn");
const imgLoser = document.getElementById("imgLoser");
const imgWin = document.getElementById("imgWin");

// Kh·ªüi t·∫°o bi·∫øn l∆∞u tr·ªØ ch·ªâ s·ªë c√¢u h·ªèi hi·ªán t·∫°i v√† ƒëi·ªÉm s·ªë
let currentQuestionIndex = 0;
let score = 0;

// H√†m b·∫Øt ƒë·∫ßu tr√≤ ch∆°i
function startQuiz() {
  currentQuestionIndex = 0;
  score = 0;
  nextButton.innerHTML = "Next";
  showQuestion();
}

// H√†m hi·ªÉn th·ªã c√¢u h·ªèi
function showQuestion() {
  resetState();
  let currentQuestion = questions[currentQuestionIndex];
  let questionNo = currentQuestionIndex + 1;
  questionElements.innerText = questionNo + ". " + currentQuestion.question;

  // T·∫°o n√∫t tr·∫£ l·ªùi cho m·ªói c√¢u tr·∫£ l·ªùi
  currentQuestion.answers.forEach((answer) => {
    const button = document.createElement("button");
    button.innerHTML = answer.text;
    button.classList.add("btn");
    answersButtons.appendChild(button);
    if (answer.correct) {
      button.dataset.correct = answer.correct;
    }
    button.addEventListener("click", selectAnswer);
  });
}

// H√†m ƒë·∫∑t l·∫°i tr·∫°ng th√°i giao di·ªán
function resetState() {
  nextButton.style.display = "none";
  while (answersButtons.firstChild) {
    answersButtons.removeChild(answersButtons.firstChild);
  }
}

function resetStateImgLoser() {
  imgLoser.style.display = "none";
  while (answersButtons.firstChild) {
    answersButtons.removeChild(answersButtons.firstChild);
  }
}

function resetStateImgWin() {
  imgWin.style.display = "none";
  while (answersButtons.firstChild) {
    answersButtons.removeChild(answersButtons.firstChild);
  }
}

// H√†m x·ª≠ l√Ω khi ch·ªçn m·ªôt c√¢u tr·∫£ l·ªùi
function selectAnswer(e) {
  const selectedBtn = e.target;
  const isCorrect = selectedBtn.dataset.correct === "true";
  if (isCorrect) {
    selectedBtn.classList.add("correct");
    score++;
  } else {
    selectedBtn.classList.add("incorrect");
  }

  // V√¥ hi·ªáu h√≥a t·∫•t c·∫£ n√∫t sau khi ch·ªçn m·ªôt c√¢u tr·∫£ l·ªùi
  Array.from(answersButtons.children).forEach((button) => {
    if (button.dataset.correct === "true") {
      button.classList.add("correct");
    }
    button.disabled = true;
  });
  nextButton.style.display = "block";
}

// H√†m hi·ªÉn th·ªã ƒëi·ªÉm s·ªë cu·ªëi c√πng
function showScore() {
  resetState();
  questionElements.innerHTML = `B·∫°n ƒë·∫°t ƒë∆∞·ª£c ${score}/${questions.length} s·ªë c√¢u h·ªèi v·ªÅ ƒë·ªô hi·ªÉu nhau! `;
  // nextButton.innerHTML = "Th·∫•t v·ªçng";
  nextButton.style.display = "block";
}

// H√†m hi·ªÉn th·ªã h√¨nh ·∫£nh khi th·∫•t b·∫°i
function showImgLoser() {
  resetStateImgLoser();
  imgLoser.style.display = "block";
}

// H√†m hi·ªÉn th·ªã h√¨nh ·∫£nh khi chi·∫øn th·∫Øng
function showImgWin() {
  resetStateImgWin();
  imgWin.style.display = "block";
}

// H√†m t·∫°o ƒë·ªëi t∆∞·ª£ng √¢m thanh
function createSound(src) {
  return new Howl({
    src: [src] // Thay 'path/to/sound.mp3' b·∫±ng ƒë∆∞·ªùng d·∫´n ƒë·∫øn t·ªáp √¢m thanh c·ªßa b·∫°n
  });
}

// T·∫°o c√°c ƒë·ªëi t∆∞·ª£ng √¢m thanh
var correctSound = createSound("/assets/sound/correct_2.mp3");
var applauseSound = createSound("/assets/sound/confetti_2.mp3");
var incorrectSound = createSound("/assets/sound/incorrect.mp3");

// H√†m hi·ªáu ·ª©ng ph√°o hoa khi chi·∫øn th·∫Øng
function celebrate() {
  var count = 600;
  var defaults = {
    origin: { y: 0.7 },
  };

  function confettiAnimation() {
    function fire(particleRatio, opts) {
      confetti({
        ...defaults,
        ...opts,
        particleCount: Math.floor(count * particleRatio),
      });
    }

    // H√†m b·∫Øn ph√°o gi·∫•y v·ªõi √¢m thanh
    function fireWithSound(particleRatio, opts) {
      // B·∫Øn ph√°o gi·∫•y
      fire(particleRatio, opts);

      // play √¢m thanh
      correctSound.play();
      applauseSound.play();
    }

    fireWithSound(0.25, {
      spread: 26,
      startVelocity: 55,
    });
    fireWithSound(0.2, {
      spread: 60,
    });
    fireWithSound(0.35, {
      spread: 100,
      decay: 0.91,
      scalar: 0.8,
    });
    fireWithSound(0.1, {
      spread: 120,
      startVelocity: 25,
      decay: 0.92,
      scalar: 1.2,
    });
    fireWithSound(0.1, {
      spread: 120,
      startVelocity: 45,
    });
  }

  confettiAnimation();
}

// H√†m x·ª≠ l√Ω khi nh·∫•n n√∫t Next
function handleNextButton() {
  currentQuestionIndex++;
  if (score === questions.length) {
    celebrate();
    showScore();
    nextButton.innerHTML = "Qu√° l√† tuy·ªát v·ªùi lu√¥n üíñ";
    showImgWin();
  } else {
    if (currentQuestionIndex < questions.length) {
      showQuestion();
    } else {
      showImgLoser();
      showScore();
      nextButton.innerHTML = "Qu√° l√† th·∫•t v·ªçng lu√¥n üò¢";
      incorrectSound.play();
    }
  }
}

// B·∫Øt s·ª± ki·ªán khi nh·∫•n n√∫t Next
nextButton.addEventListener("click", () => {
  if (currentQuestionIndex < questions.length) {
    handleNextButton();
  } else {
    window.location.href = "chocolateBox.html";
  }
});

// B·∫Øt ƒë·∫ßu tr√≤ ch∆°i khi t·∫£i trang
startQuiz();

